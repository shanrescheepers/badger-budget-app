[{"/Users/mac/Desktop/GIThub/badger-budget-app/badger-budget-app/src/index.js":"1","/Users/mac/Desktop/GIThub/badger-budget-app/badger-budget-app/src/App.js":"2","/Users/mac/Desktop/GIThub/badger-budget-app/badger-budget-app/src/components/income/Income.js":"3","/Users/mac/Desktop/GIThub/badger-budget-app/badger-budget-app/src/components/expenses/Expenses.js":"4","/Users/mac/Desktop/GIThub/badger-budget-app/badger-budget-app/src/calculations/Calculations.js":"5","/Users/mac/Desktop/GIThub/badger-budget-app/badger-budget-app/src/components/savings/Savings.js":"6","/Users/mac/Desktop/GIThub/badger-budget-app/badger-budget-app/src/components/summary/Summary.js":"7","/Users/mac/Desktop/GIThub/badger-budget-app/badger-budget-app/src/components/bracket/Bracket.js":"8"},{"size":349,"mtime":1653932705763,"results":"9","hashOfConfig":"10"},{"size":985,"mtime":1656161474118,"results":"11","hashOfConfig":"10"},{"size":4838,"mtime":1656117597422,"results":"12","hashOfConfig":"10"},{"size":3752,"mtime":1656160686530,"results":"13","hashOfConfig":"10"},{"size":2669,"mtime":1655412791349,"results":"14","hashOfConfig":"10"},{"size":1339,"mtime":1656161881689,"results":"15","hashOfConfig":"10"},{"size":2638,"mtime":1656161764070,"results":"16","hashOfConfig":"10"},{"size":1754,"mtime":1656160936042,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"23dbza",{"filePath":"21","messages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23"},{"filePath":"24","messages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"26","messages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"20"},{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"20"},"/Users/mac/Desktop/GIThub/badger-budget-app/badger-budget-app/src/index.js",[],["38","39"],"/Users/mac/Desktop/GIThub/badger-budget-app/badger-budget-app/src/App.js",["40","41"],"import './App.scss';\nimport Income from './components/income/Income';\nimport Expenses from './components/expenses/Expenses';\nimport { useState } from 'react';\nimport Savings from './components/savings/Savings';\nimport Summary from './components/summary/Summary';\nimport Bracket from './components/bracket/Bracket';\n\nfunction App() {\n  const [data, setData] = useState('');\n  const [expenseData, setExpenseData] = useState('');\n\n  const householdData = (data) => {\n    setData(data);\n  }\n\n  const expenseTotal = (data) => {\n    setExpenseData(data);\n  }\n\n  return (\n    <div className=\"app\">\n      <div role='incomeComponent'>\n        <Income householdIncomeData={householdData} />\n      </div>\n      <div role='content' className='app__content'>\n        <Expenses householdExpenseData={expenseTotal} />\n        <Savings incomeData={data} />\n        <Bracket></Bracket>\n        <Summary incomeData={data} expenseData={expenseData} />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","/Users/mac/Desktop/GIThub/badger-budget-app/badger-budget-app/src/components/income/Income.js",[],"/Users/mac/Desktop/GIThub/badger-budget-app/badger-budget-app/src/components/expenses/Expenses.js",["42"],"import { useState } from 'react';\nimport { calculateExpenseLumpTotal } from '../../calculations/Calculations';\nimport './Expenses.scss';\n\n// household data is dieselfde data wat inkom van Income.ja\nfunction Expenses({ householdExpenseData }) {\n    // handleChange set in die nuwe state, dit wat in getik word. Dit sit dit in die EXPENSE\\setExpense state.\n    const [expenseList, setExpenseList] = useState({\n        // hier is die expense state array, wat objects op mekaar gaan bou\n        // objects kom deur van die handlesubmt.\n        expenses: []\n    })\n\n    const [expense, setExpense] = useState({})\n    const [totalExpense, setTotalExpense] = useState(0)\n    // handlesubmit sit dit  in die state in, add button\n\n    const handleSubmit = (event) => {\n        event.preventDefault();\n        // logies, begin ons met 0/ n nuwe variab le word gemaak agv PASS BY REFERENCE MEMORY FOKOP.\n        //MAW my currentExpense moet op gebou word, sodoende, se ons daar is n expense lys, en die expense lys bevat expenses obvs\n\n        let currentExpenses = expenseList.expenses;\n        // n nuwe variable weer, wat se wat die nuwe expense is, wat na die current expense toe gaan, wat dan die current expense lys opbou, en na die expense array toe stuur, om die expenses objects te maak\n        // lyn 27 en 28, kom van die input values af. input values word in die expense state gesiut\n        let newExpense = {\n            expenseName: expense.name,\n            expenseTotal: parseFloat(expense.total)\n        }\n        // die vorige variable wat eens 0 was, is nou op gebou, en nou word dit geset, en gepush, met die nuwe data wat die object maak, so eens = 0, nou basies 0+NEW Expense\n        currentExpenses.push(newExpense)\n\n        setExpenseList({\n            expenses: currentExpenses\n        })\n\n        setTotalExpense(calculateExpenseLumpTotal(expenseList.expenses));\n        document.getElementById(\"expenseForm\").reset();\n        householdExpenseData(calculateExpenseLumpTotal(expenseList.expenses));\n    }\n\n    const removeExpense = (name) => {\n        const newExpenseList = expenseList.expenses.filter((expense) => expense.expenseName !== name);\n        setExpenseList({\n            expenses: newExpenseList\n        });\n\n        setTotalExpense(calculateExpenseLumpTotal(newExpenseList));\n        householdExpenseData(calculateExpenseLumpTotal(newExpenseList));\n    }\n\n    const handleChange = (event) => {\n        const name = event.target.name;\n        const value = event.target.value;\n        setExpense(values => ({ ...values, [name]: value }))\n    }\n\n    return (\n        <div className=\"expenses\">\n            <span className='expenses__title'> Expenses</span>\n            <form id='expenseForm' className=\"expenses__add\">\n                <input placeholder=\"expense name\" name='name' onChange={handleChange}></input>\n                <input placeholder=\"expense total\" name='total' onChange={handleChange}></input>\n                <button onClick={handleSubmit}>ADD</button>\n            </form>\n            <h2 className='expenses__heading'>Added Expenses</h2>\n            <div className='expenses__content'>\n                {expenseList.expenses.map((expense, expenseKey) =>\n                    <div key={expenseKey} className='expenses__content__row'>\n                        <button onClick={() => removeExpense(expense.expenseName)}>x</button>\n                        <span>{expense.expenseName}</span>\n                        <span className='expenses__content__row__amount'>R {expense.expenseTotal}</span>\n                    </div>\n                )}\n            </div>\n            <h2 role='totalExpense' className='expenses__total'>TOTAL EXPENSES: R{totalExpense}</h2>\n        </div >\n    );\n}\n\nexport default Expenses;\n","/Users/mac/Desktop/GIThub/badger-budget-app/badger-budget-app/src/calculations/Calculations.js",[],"/Users/mac/Desktop/GIThub/badger-budget-app/badger-budget-app/src/components/savings/Savings.js",["43","44"],"/Users/mac/Desktop/GIThub/badger-budget-app/badger-budget-app/src/components/summary/Summary.js",["45"],"/Users/mac/Desktop/GIThub/badger-budget-app/badger-budget-app/src/components/bracket/Bracket.js",["46"],"import './Bracket.scss';\n\nfunction Bracket() {\n    return (\n        <div role='bracketCat' className='bracket'>\n            <span className='bracket__title'>Tax Bracket Categories</span>\n            <div className='bracket__content'>\n                <div className='bracket__content__row'>\n                    <h4>R1 - R226000</h4>\n                    <h4 className='bracket__content__row__amount'>Category 1</h4>\n                </div>\n                <div className='bracket__content__row'>\n                    <h4>R226001 - R353100</h4>\n                    <h4 className='bracket__content__row__amount'>Category 2</h4>\n                </div>\n                <div className='bracket__content__row'>\n                    <h4>R353101 - R488700</h4>\n                    <h4 className='bracket__content__row__amount'>Category 3</h4>\n                </div>\n                <div className='bracket__content__row'>\n                    <h4>R488701 - R641400</h4>\n                    <h4 className='bracket__content__row__amount'>Category 4</h4>\n                </div>\n                <div className='bracket__content__row'>\n                    <h4>R641401 - R817600</h4>\n                    <h4 className='bracket__content__row__amount'>Category 5</h4>\n                </div>\n                <div className='bracket__content__row'>\n                    <h4>R817601 - R1731600</h4>\n                    <h4 className='bracket__content__row__amount'>Category 6</h4>\n                </div>\n                <div className='bracket__content__row'>\n                    <h4>R1731601 and above</h4>\n                    <h4 className='bracket__content__row__amount'>Category 7</h4>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default Bracket;",{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","severity":1,"message":"52","line":23,"column":12,"nodeType":"53","endLine":23,"endColumn":34},{"ruleId":"51","severity":1,"message":"52","line":26,"column":12,"nodeType":"53","endLine":26,"endColumn":26},{"ruleId":"51","severity":1,"message":"52","line":76,"column":17,"nodeType":"53","endLine":76,"endColumn":36},{"ruleId":"54","severity":1,"message":"55","line":8,"column":5,"nodeType":"56","endLine":8,"endColumn":14,"suggestions":"57"},{"ruleId":"51","severity":1,"message":"52","line":26,"column":17,"nodeType":"53","endLine":26,"endColumn":36},{"ruleId":"51","severity":1,"message":"52","line":35,"column":17,"nodeType":"53","endLine":35,"endColumn":36},{"ruleId":"51","severity":1,"message":"52","line":5,"column":14,"nodeType":"53","endLine":5,"endColumn":31},"no-native-reassign",["58"],"no-negated-in-lhs",["59"],"jsx-a11y/aria-role","Elements with ARIA roles must use a valid, non-abstract ARIA role.","JSXAttribute","react-hooks/exhaustive-deps","React Hook useEffect contains a call to 'setTotal'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [incomeData.incomeData.people] as a second argument to the useEffect Hook.","Identifier",["60"],"no-global-assign","no-unsafe-negation",{"desc":"61","fix":"62"},"Add dependencies array: [incomeData.incomeData.people]",{"range":"63","text":"64"},[341,341],", [incomeData.incomeData.people]"]